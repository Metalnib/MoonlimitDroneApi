


// —————————————— 
// <auto-generated> 
//	This code was auto-generated 01/03/2021 11:17:49 
//  T4 template produces Startup additions
//	NOTE:T4 generated code may need additional updates/addjustments by developer in order to compile a solution.
// <auto-generated> 
// —————————————–
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;
using Microsoft.EntityFrameworkCore;
using System.Text;
using Microsoft.IdentityModel.Tokens;
using Microsoft.AspNetCore.Authentication.JwtBearer;
using Moonlimit.DroneAPI.Api;
using Moonlimit.DroneAPI.Entity.UnitofWork;
using Moonlimit.DroneAPI.Entity.Context;
using Moonlimit.DroneAPI.Entity.Repository;
using AutoMapper;
using Moonlimit.DroneAPI.Domain.Mapping;
using Moonlimit.DroneAPI.Domain.Service;
using System.Net;
using Microsoft.AspNetCore.Diagnostics;
using Microsoft.AspNetCore.Http;
using Serilog;
using Swashbuckle.AspNetCore.Swagger;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json.Serialization;
using Microsoft.OpenApi.Models;
using Microsoft.AspNetCore.Mvc.ApplicationModels;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Versioning;
using Microsoft.AspNetCore.Mvc.ApiExplorer;


namespace Moonlimit.DroneAPI.Api
{

    public partial class Startup
    {
	     // Register new services to DI
        partial void SetAdditionalDIServices(IServiceCollection services)
        {
			services.AddTransient(typeof(ObjectDetectionService<,>), typeof(ObjectDetectionService<,>));
            services.AddTransient(typeof(ObjectDetectionServiceAsync<,>), typeof(ObjectDetectionServiceAsync<,>));
			services.AddTransient(typeof(PlannedRouteService<,>), typeof(PlannedRouteService<,>));
            services.AddTransient(typeof(PlannedRouteServiceAsync<,>), typeof(PlannedRouteServiceAsync<,>));
			services.AddTransient(typeof(StatusReportService<,>), typeof(StatusReportService<,>));
            services.AddTransient(typeof(StatusReportServiceAsync<,>), typeof(StatusReportServiceAsync<,>));
			services.AddTransient(typeof(DroneService<,>), typeof(DroneService<,>));
            services.AddTransient(typeof(DroneServiceAsync<,>), typeof(DroneServiceAsync<,>));
			services.AddTransient(typeof(DroneCommandsService<,>), typeof(DroneCommandsService<,>));
            services.AddTransient(typeof(DroneCommandsServiceAsync<,>), typeof(DroneCommandsServiceAsync<,>));
			services.AddTransient(typeof(DroneNetworkSettingsService<,>), typeof(DroneNetworkSettingsService<,>));
            services.AddTransient(typeof(DroneNetworkSettingsServiceAsync<,>), typeof(DroneNetworkSettingsServiceAsync<,>));
			services.AddTransient(typeof(DroneOnvifSettingsService<,>), typeof(DroneOnvifSettingsService<,>));
            services.AddTransient(typeof(DroneOnvifSettingsServiceAsync<,>), typeof(DroneOnvifSettingsServiceAsync<,>));
			services.AddTransient(typeof(GeoAreaService<,>), typeof(GeoAreaService<,>));
            services.AddTransient(typeof(GeoAreaServiceAsync<,>), typeof(GeoAreaServiceAsync<,>));
			services.AddTransient(typeof(GeoPointService<,>), typeof(GeoPointService<,>));
            services.AddTransient(typeof(GeoPointServiceAsync<,>), typeof(GeoPointServiceAsync<,>));
			services.AddTransient(typeof(MissionService<,>), typeof(MissionService<,>));
            services.AddTransient(typeof(MissionServiceAsync<,>), typeof(MissionServiceAsync<,>));
			services.AddTransient(typeof(PatrolConfigService<,>), typeof(PatrolConfigService<,>));
            services.AddTransient(typeof(PatrolConfigServiceAsync<,>), typeof(PatrolConfigServiceAsync<,>));
		}
	}
}